{
    "openapi": "3.0.0",
    "info": {
        "title": "StarterPack Laravel API",
        "description": "API Documentation",
        "contact": {
            "name": "Junico Dwi Chandra",
            "email": "junicodwi.chandra@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "description": "Register Form",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Register successfull!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity error"
                    },
                    "500": {
                        "description": "Failed operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Register fail!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get a JWT via given credentials.",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get token"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/auth/me": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the authenticated User",
                "operationId": "f0b15943f55143d36f606a2dbd1d2366",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log the user out (Invalidate the token).",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh a token.",
                "operationId": "b2eae7a8032954d25b46c7ec6f489c68",
                "responses": {
                    "200": {
                        "description": "Get token"
                    }
                }
            }
        },
        "/api/module/email/send": {
            "post": {
                "tags": [
                    "Email"
                ],
                "summary": "Send Email",
                "operationId": "888a51d4f07b49d75607b6e3a81d45f1",
                "requestBody": {
                    "description": "Send Email Form",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "from": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "to": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "cc": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "bcc": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "content": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Failed operation"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication and Authorization with JWT Token"
        },
        {
            "name": "Email",
            "description": ""
        }
    ]
}